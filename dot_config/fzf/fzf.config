# FZF Configuration
# Optimized for performance with GitHub Dark theme colors

# Core Settings
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git --exclude node_modules'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git --exclude node_modules'

# Performance Settings
export FZF_DEFAULT_OPTS="
  --height 40% 
  --layout=reverse 
  --border rounded 
  --info inline 
  --multi 
  --cycle 
  --preview-window='right:60%:wrap' 
  --bind='ctrl-/:toggle-preview' 
  --bind='ctrl-a:select-all' 
  --bind='ctrl-y:execute-silent(echo {+} | clipboard)' 
  --bind='ctrl-e:execute(echo {+} | xargs -o nvim)' 
  --bind='ctrl-v:execute(code {+})' 
  --bind='alt-j:preview-down' 
  --bind='alt-k:preview-up' 
  --bind='alt-h:preview-page-up'
  --bind='alt-l:preview-page-down'
  --bind='?:toggle-preview'
  --bind='ctrl-space:toggle+down'
  --bind='alt-enter:print-query'
  --bind='ctrl-f:page-down'
  --bind='ctrl-b:page-up'
  --bind='alt-w:backward-kill-word'
"

# GitHub Dark Theme 
export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS \
  --color=fg:#c9d1d9,bg:#0d1117,hl:#58a6ff \
  --color=fg+:#ffffff,bg+:#30363d,hl+:#58a6ff \
  --color=info:#3fb950,prompt:#f0883e,pointer:#bc8cff \
  --color=marker:#3fb950,spinner:#f0883e,header:#8b949e \
  --color=border:#30363d,label:#8b949e,query:#c9d1d9 \
  --color=preview-bg:#0d1117,preview-fg:#c9d1d9 \
"

# Set transparency level - works with terminal transparency
export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --no-bold"

# Previews
export FZF_CTRL_T_OPTS="
  --preview='
    if [ -d {} ]; then
      ls -la --color=always {};
    elif [ -f {} ]; then
      bat --color=always --style=numbers --line-range=:500 {}
    else
      echo {} 2> /dev/null | head -200
    fi
  '
  --bind 'ctrl-/:change-preview-window(down|hidden|)'
"

export FZF_ALT_C_OPTS="
  --preview='ls -la --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'
"

# Git commit browser
is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

gf() {
  is_in_git_repo || return
  git -c color.status=always status --short |
  fzf --ansi --multi --preview 'git diff --color=always -- {-1} | sed 1,4d; cat {-1}' | 
  cut -c4- | 
  sed 's/.* -> //'
}

gb() {
  is_in_git_repo || return
  git branch -a --color=always | 
  grep -v '/HEAD\s' | 
  fzf --ansi --multi --preview 'git log --color=always --oneline --graph --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed s/^..// <<< {} | cut -d" " -f1) | head -200' |
  sed 's/^..//' | 
  cut -d' ' -f1 |
  sed 's#^remotes/##'
}

gt() {
  is_in_git_repo || return
  git tag --sort -version:refname |
  fzf --multi --preview 'git show --color=always {} | head -200'
}

gh() {
  is_in_git_repo || return
  git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --graph --color=always |
  fzf --ansi --multi --no-sort --reverse --query="$1" \
      --preview 'grep -o "[a-f0-9]\{7,\}" <<< {} | xargs git show --color=always | head -200' |
  grep -o "[a-f0-9]\{7,\}"
}

gr() {
  is_in_git_repo || return
  git remote -v | 
  awk '{print $1 "\t" $2}' | 
  uniq |
  fzf --tac \
      --preview 'git log --oneline --graph --date=short --pretty="format:%C(auto)%cd %h%d %s" --remotes={1} | head -200' |
  cut -d$'\t' -f1
}

# fd integration - faster file finding
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}